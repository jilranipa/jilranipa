Install Laravel
    - composer create-project laravel/laravel folder/project_name
    - cd folder/project_name
    - php artisan key:generate
    - php artisan vendor:publish

Serve The App 
    - php artisan sevre || php -S localhost:8000 -t public/

Directory structure
    -app
        -Console
            -kernel.php ( for scheduler )
                Example 
                    $schedule->command('inspire')->hourly();
                    $schedule->call("App\Http\Controllers\cron\cronController@project_balance_update")->everyMinute();
                    $schedule->call("App\Http\Controllers\cron\cronController@project_balance_update")->cron('* * * * *')
        -Exceptions
        -Http
            -Controllers
            -Middleware
                1) Default Middlewares
                    Authenticate,
                    RedirectIfAuthenticated,
                    VerifyCsrfToken ( use except array to remove specific url from csrf)
            -kernel.php (The application's global HTTP middleware stack. add new middleware if you want globally $middleware property)   
        -Models
        -Providers
            1) Default Service Provider
                App,
                Auth,
                Broadcast,
                Event,
                Route 
                    Use
                    1 ) Typically, users are redirected here after authentication 
                        example: public const HOME = '/home';
                    2 ) Define your route model bindings, pattern filters, and other route configuration. (inside boot() function)
                        example:    $this->routes(function () {
                                        Route::middleware('api')
                                            ->prefix('api')
                                            ->group(base_path('routes/api.php'));

                                        Route::middleware('web')
                                            ->group(base_path('routes/web.php'));
                                    });
    -bootstrap
    -config
        -app.php 
            app name , app environment , asset_url , timezone , locale , Providers
        -auth.php
        -cors.php
        -database.php
        -mail.php
        -sanctum.php
        -session.php
            expire_on_close
    -database
        -factories
        -migrations
        -seeders
    -docker
    -public
    -resources
        -css
        -js
        -views
    -routes
        -api.php
        -web.php
    -storage
        -logs
            -laravel.log
    -tests
    -vendor
    -.env
    -composer.json ( installed vendor version with dependencies )
    -composer.lock 

almost all things are in .env file


Authentication Default

    Jetstream
        -composer require laravel/jetstream 
        -php artisan jetstream:install livewire
        -npm install
        -npm run dev
        -php artisan migrate

    UI 
        -composer require laravel/ui
        -php artisan ui bootstrap --auth
        -npm install
        -npm run dev
        -php artisan migrate

    Breeze
        -composer require laravel/breeze --dev
        -php artisan breeze:install blade
        -npm install
        -npm run dev
        -php artisan migrate


Life Cycle
    -The entry point for all requests to a Laravel application is the public/index.php file. -> app/Http/Kernel.php (pass through each $middleware property  ) ->  


Facades 
    -Example
        use Illuminate\Support\Facades\Response;
        Route::get('/users', function () {
            return response()->json([
                // ...
            ]);
        });


Facades vs Helper Functions
    return Illuminate\Support\Facades\View::make('profile');
    
    return view('profile');


Middleware Parameters

    public function handle(Request $request, Closure $next, string $role): Response
    {
        if (! $request->user()->hasRole($role)) {
            // Redirect...
        }
 
        return $next($request);
    }


    // two roles comma seperate else single 

    Route::put('/post/{id}', function (string $id) {
        // ...
    })->middleware('role:editor,publisher');


To include custom route file 

    -let say we created a rouite file admin-route.php . to access the route of that in web.php at end add 
        include 'admin-route.php';


Custom  Login Logout 

    Login
        -Auth::attempt(['email' => $request->email, 'password' => $request->password], $request->remember)
    Logout
        -Auth::guard('web')->logout();


Laravel Breeze + Laravel Sanctum 
    
    at login 
    public function signin(Request $request){


        $credentials = $request->validate([
            'email' => ['required', 'email'],
            'password' => ['required'],
        ]);
 
        if (Auth::attempt($credentials)) {
            $authUser = Auth::user();
            $success['token'] = $authUser->createToken('MyAuthApp')->plainTextToken;
            return  response()->json($success);
        }else{
            return  response()->json(['error'=>'enter data']);
        }
    }
    - return a token at success
    - in Authorization as Bearer add token 
    - at the api call in header add the Accept -> application/json 


Resource Controllers

    Use 
        -For example, imagine your application contains a Photo model and a Movie model. It is likely that users can create, read, update, or delete these resources.
    Command 
        -php artisan make:controller PhotoController --resource